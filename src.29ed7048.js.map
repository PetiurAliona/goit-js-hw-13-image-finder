{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","date","intervalId","start","setInterval","time","getTime","Date","now","render","stop","clearInterval","days","Math","floor","toString","padStart","hours","mins","secs","document","querySelector","textContent"],"mappings":";AAAA,MAAMA,EACFC,aAAY,SAAEC,EAAF,WAAYC,IACfD,KAAAA,SAAWA,EACXE,KAAAA,KAAOD,EACPE,KAAAA,WAAa,KACbC,KAAAA,QAETA,QACSD,KAAAA,WAAaE,YAAY,KACpBC,MAAAA,EAAO,KAAKJ,KAAKK,UAAYC,KAAKC,MACnCC,KAAAA,OAAO,KAAKH,QAAQD,KAC1B,KAIPK,OACIC,cAAc,KAAKT,YAG1BI,QAAQD,GAME,MAAA,CAAEO,KALIC,KAAKC,MAAMT,EAAQ,OAAsBU,WAAWC,SAAS,EAAG,KAK9DC,MAJDJ,KAAKC,MAAOT,EAAQ,MAAyB,MAAiBU,WAAWC,SAAS,EAAG,KAI7EE,KAHTL,KAAKC,MAAOT,EAAQ,KAAoB,KAAYU,WAAWC,SAAS,EAAG,KAG5DG,KAFfN,KAAKC,MAAOT,EAAQ,IAAc,KAAMU,WAAWC,SAAS,EAAG,MAK5EP,QAAO,KAAEG,EAAF,MAAQK,EAAR,KAAeC,EAAf,KAAqBC,IACpBA,GAAAA,EAAO,EAEA,OADFT,KAAAA,QACE,EAGXU,SAASC,cAAc,uBAAuBC,YAAcV,EAC5DQ,SAASC,cAAc,wBAAwBC,YAAcL,EAC7DG,SAASC,cAAc,uBAAuBC,YAAcJ,EAC5DE,SAASC,cAAc,uBAAuBC,YAAcH,GAGpE,IAAItB,EAAe,CACjBE,SAAU,WACVC,WAAY,IAAIO,KAAK","file":"src.29ed7048.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n    constructor({ selector, targetDate }) {\n        this.selector = selector;\n        this.date = targetDate;\n        this.intervalId = null;\n        this.start();\n    }\n    start() {\n        this.intervalId = setInterval(() => {\n            const time = this.date.getTime() - Date.now()\n            this.render(this.getTime(time));\n        }, 1000);\n\n        }\n    \n    stop() {\n        clearInterval(this.intervalId);\n    }\n\n getTime(time) {\n    const days = Math.floor(time / (1000 * 60 * 60 * 24)).toString().padStart(2, '0');\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)).toString().padStart(2, '0');\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)).toString().padStart(2, '0');\n    const secs = Math.floor((time % (1000 * 60)) / 1000).toString().padStart(2, '0');\n\n    return { days, hours, mins, secs };\n    }\n    \n    render({ days, hours, mins, secs }) {\n        if (secs < 0) {\n            this.stop();\n            return false;\n        }\n        // document.querySelector(this.selector).innerHTML = `${days}:${hours}:${mins}:${secs}`;\n        document.querySelector('[data-value=\"days\"]').textContent = days;\n        document.querySelector('[data-value=\"hours\"]').textContent = hours;\n        document.querySelector('[data-value=\"mins\"]').textContent = mins;\n        document.querySelector('[data-value=\"secs\"]').textContent = secs;\n    }    \n}\nnew CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 31, 2021'),\n});"]}